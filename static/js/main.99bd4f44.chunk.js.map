{"version":3,"sources":["components/Display.js","components/Button.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Display","displayText","this","props","calcElements","join","currentElement","id","React","Component","Button","handleClick","event","onClick","value","text","className","operatorRegEx","numberRegEx","Calculator","previousElement","state","length","numbersButton","e","test","setState","prevState","operatorButton","localCurrentElement","String","endsWith","slice","tempArray","pop","decimalButton","calculateButton","i","localCalcElements","doCalculation","operator","temp","Number","splice","clearButton","bind","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99bd4f44.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Display extends React.Component {\r\n\r\n\trender() {\r\n    var displayText = this.props.calcElements.join(\"\")+this.props.currentElement;\r\n\t\treturn <div id=\"display\">{displayText ? displayText : '0'}</div>;\r\n\t}\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Button extends React.Component {\r\n\thandleClick = event => {\r\n\t\tif (this.props.onClick) {\r\n\t\t\tthis.props.onClick(\r\n\t\t\t\tevent,\r\n\t\t\t\tthis.props.value ? this.props.value : this.props.text\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tid={this.props.id}\r\n\t\t\t\tclassName=\"button\"\r\n\t\t\t\tonClick={this.handleClick}\r\n\t\t\t\tvalue={this.props.value}\r\n\t\t\t>\r\n\t\t\t\t{this.props.text}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport Display from \"./Display\";\r\nimport Button from \"./Button\";\r\n\r\nconst operatorRegEx = /-|\\+|X|\\//;\r\nconst numberRegEx = /\\d+.?\\d*/;\r\n\r\nexport default class Calculator extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tcurrentElement: \"\",\r\n\t\t\tcalcElements: []\r\n\t\t};\r\n\r\n\t\tthis.clearButton = this.clearButton.bind(this);\r\n\t\tthis.numbersButton = this.numbersButton.bind(this);\r\n\t\tthis.operatorButton = this.operatorButton.bind(this);\r\n\t\tthis.decimalButton = this.decimalButton.bind(this);\r\n\t\tthis.previousElement = this.previousElement.bind(this);\r\n\t}\r\n\r\n\tpreviousElement = () => {\r\n\t\treturn this.state.calcElements[this.state.calcElements.length - 1];\r\n\t};\r\n\r\n\tclearButton() {\r\n\t\tthis.setState({\r\n\t\t\tcurrentElement: \"\",\r\n\t\t\tcalcElements: []\r\n\t\t});\r\n\t}\r\n\r\n\tnumbersButton = (e, value) => {\r\n\t\t// Validates if value passed is digit\r\n\t\tif (/\\D/.test(value)) return;\r\n\r\n\t\t// If current element is a number\r\n\t\tif (\r\n\t\t\t!this.state.currentElement ||\r\n\t\t\tnumberRegEx.test(this.state.currentElement)\r\n\t\t) {\r\n\t\t\t// Do not allow multiple zeros and a zero at start\r\n\t\t\tif (this.state.currentElement === \"0\") {\r\n\t\t\t\tthis.setState(prevState => ({\r\n\t\t\t\t\tcurrentElement: value\r\n                }));\r\n                return ;\r\n\t\t\t}\r\n\t\t\tthis.setState(prevState => ({\r\n\t\t\t\tcurrentElement: prevState.currentElement + value\r\n\t\t\t}));\r\n\t\t\treturn ;\r\n\t\t}\r\n        // Special case where current element is '-' and previous is an operator\r\n        if(this.state.currentElement === '-' && operatorRegEx.test(this.previousElement())) {\r\n            this.setState(prevState => ({\r\n\t\t\t\tcurrentElement: prevState.currentElement + value\r\n            }));\r\n            return ;\r\n        }\r\n\r\n\t\t// If current element is an operator\r\n\t\tif (operatorRegEx.test(this.state.currentElement)) {\r\n\t\t\tthis.setState(prevState => ({\r\n\t\t\t\tcalcElements: [\r\n\t\t\t\t\t...prevState.calcElements,\r\n\t\t\t\t\tprevState.currentElement\r\n\t\t\t\t],\r\n\t\t\t\tcurrentElement: value\r\n\t\t\t}));\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\toperatorButton = (e, value) => {\r\n\t\tvar localCurrentElement = this.state.currentElement;\r\n\t\t//Validates if operator is passed\r\n\t\tif (!operatorRegEx.test(value)) return;\r\n        \r\n\t\t// If current element is a number\r\n\t\tif (numberRegEx.test(localCurrentElement)) {\r\n\t\t\t// If number ends with a decimal, remove decimal\r\n\t\t\tif (String(localCurrentElement).endsWith(\".\"))\r\n\t\t\t\tlocalCurrentElement = String(localCurrentElement).slice(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tvalue.length - 2\r\n\t\t\t\t);\r\n\r\n\t\t\tthis.setState(prevState => ({\r\n\t\t\t\tcalcElements: [...prevState.calcElements, localCurrentElement],\r\n\t\t\t\tcurrentElement: value\r\n\t\t\t}));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If current element is an operator\r\n\t\tif (operatorRegEx.test(localCurrentElement)) {\r\n            // Special case where there are 2 operators in a row already and another is entered. eg. 5X- then /\r\n            if(operatorRegEx.test(this.previousElement()))\r\n            {\r\n                var tempArray = [...this.state.calcElements];\r\n                tempArray.pop();\r\n                this.setState(prevState => ({\r\n                    calcElements: tempArray,\r\n                    currentElement: value\r\n                }));\r\n                return;\r\n            }\r\n\r\n            // Special case where '-' is allowed after 'X' and '/'\r\n            if(value === '-' && (localCurrentElement === 'X' || localCurrentElement === '/')) {\r\n                this.setState(prevState => ({\r\n                    calcElements: [...prevState.calcElements, localCurrentElement],\r\n                    currentElement: value\r\n                }));\r\n                return;\r\n            }\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentElement: value\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\tdecimalButton = (e, value) => {\r\n\t\t// If current element already has decimal\r\n\t\tif (/\\./.test(this.state.currentElement)) return;\r\n\t\telse {\r\n\t\t\tthis.setState(prevState => ({\r\n\t\t\t\tcurrentElement: prevState.currentElement + value\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\r\n\tcalculateButton = () => {\r\n\t\tvar i = 0;\r\n\t\tvar localCalcElements = [\r\n\t\t\t...this.state.calcElements,\r\n\t\t\tthis.state.currentElement\r\n\t\t];\r\n\r\n\t\tvar doCalculation = operator => {\r\n\t\t\tvar temp = 0;\r\n\t\t\tswitch (operator) {\r\n\t\t\t\tcase \"+\":\r\n\t\t\t\t\ttemp =\r\n\t\t\t\t\t\tNumber(localCalcElements[i - 1]) +\r\n\t\t\t\t\t\tNumber(localCalcElements[i + 1]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"-\":\r\n\t\t\t\t\ttemp =\r\n\t\t\t\t\t\tNumber(localCalcElements[i - 1]) -\r\n\t\t\t\t\t\tNumber(localCalcElements[i + 1]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"X\":\r\n\t\t\t\t\ttemp =\r\n\t\t\t\t\t\tNumber(localCalcElements[i - 1]) *\r\n\t\t\t\t\t\tNumber(localCalcElements[i + 1]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"/\":\r\n\t\t\t\t\ttemp =\r\n\t\t\t\t\t\tNumber(localCalcElements[i - 1]) /\r\n\t\t\t\t\t\tNumber(localCalcElements[i + 1]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlocalCalcElements.splice(i - 1, 3, temp);\r\n\t\t\ti = i - 2;\r\n\t\t};\r\n\r\n\t\t// Calculates multiply and division first\r\n\t\tfor (i = 0; i < localCalcElements.length; i++) {\r\n\t\t\tif (localCalcElements[i] === \"X\" || localCalcElements[i] === \"/\") {\r\n\t\t\t\tdoCalculation(localCalcElements[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Calculates addition and subtraction after\r\n\t\tfor (i = 0; i < localCalcElements.length; i++) {\r\n\t\t\tif (localCalcElements[i] === \"+\" || localCalcElements[i] === \"-\") {\r\n\t\t\t\tdoCalculation(localCalcElements[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState((prevState, props) => ({\r\n\t\t\tcalcElements: [],\r\n\t\t\tcurrentElement: localCalcElements[0]\r\n\t\t}));\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"calculator\">\r\n\t\t\t\t<Display\r\n\t\t\t\t\tcalcElements={this.state.calcElements}\r\n\t\t\t\t\tcurrentElement={this.state.currentElement}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button id=\"clear\" text=\"AC\" onClick={this.clearButton} />\r\n\t\t\t\t<Button id=\"divide\" text=\"/\" onClick={this.operatorButton} />\r\n\t\t\t\t<Button id=\"multiply\" text=\"X\" onClick={this.operatorButton} />\r\n\t\t\t\t<Button id=\"seven\" text=\"7\" onClick={this.numbersButton} />\r\n\t\t\t\t<Button id=\"eight\" text=\"8\" onClick={this.numbersButton} />\r\n\t\t\t\t<Button id=\"nine\" text=\"9\" onClick={this.numbersButton} />\r\n\t\t\t\t<Button id=\"subtract\" text=\"-\" onClick={this.operatorButton} />\r\n\t\t\t\t<Button id=\"four\" text=\"4\" onClick={this.numbersButton} />\r\n\t\t\t\t<Button id=\"five\" text=\"5\" onClick={this.numbersButton} />\r\n\t\t\t\t<Button id=\"six\" text=\"6\" onClick={this.numbersButton} />\r\n\t\t\t\t<Button id=\"add\" text=\"+\" onClick={this.operatorButton} />\r\n\t\t\t\t<Button id=\"one\" text=\"1\" onClick={this.numbersButton} />\r\n\t\t\t\t<Button id=\"two\" text=\"2\" onClick={this.numbersButton} />\r\n\t\t\t\t<Button id=\"three\" text=\"3\" onClick={this.numbersButton} />\r\n\t\t\t\t<Button id=\"equals\" text=\"=\" onClick={this.calculateButton} />\r\n\t\t\t\t<Button id=\"zero\" text=\"0\" onClick={this.numbersButton} />\r\n\t\t\t\t<Button id=\"decimal\" text=\".\" onClick={this.decimalButton} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\nimport Calculator from './components/Calculator'\nimport './stylesheets/main.scss';\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}